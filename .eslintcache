[{"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\reportWebVitals.js":"2","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\App.js":"3","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\reducers\\cartReducer.js":"4","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\layout\\Nav.js":"5","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\layout\\Main.js":"6","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\pages\\Cart.js":"7","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\pages\\Products.js":"8","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\components\\ProductItem.js":"9","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\actions\\cartActions.js":"10","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\actions\\actionTypes.js":"11","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\components\\CartItem.js":"12","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\components\\ProductsFilter.js":"13","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\components\\SingleProduct.js":"14","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\hooks\\useForm.js":"15","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\Validation.js":"16","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\pages\\Home.js":"17","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\components\\HomeTitle.js":"18","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\components\\HomeCarouselItem.js":"19","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\layout\\Footer.js":"20"},{"size":593,"mtime":1608985686504,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":474,"mtime":1609343007409,"results":"24","hashOfConfig":"22"},{"size":11657,"mtime":1609339442131,"results":"25","hashOfConfig":"22"},{"size":1437,"mtime":1609531431684,"results":"26","hashOfConfig":"22"},{"size":678,"mtime":1609334300746,"results":"27","hashOfConfig":"22"},{"size":1772,"mtime":1609015856768,"results":"28","hashOfConfig":"22"},{"size":1103,"mtime":1609172212627,"results":"29","hashOfConfig":"22"},{"size":1679,"mtime":1609172441697,"results":"30","hashOfConfig":"22"},{"size":2110,"mtime":1609339213218,"results":"31","hashOfConfig":"22"},{"size":588,"mtime":1609337113180,"results":"32","hashOfConfig":"22"},{"size":1435,"mtime":1609233935417,"results":"33","hashOfConfig":"22"},{"size":8070,"mtime":1609172638856,"results":"34","hashOfConfig":"22"},{"size":9528,"mtime":1609323366192,"results":"35","hashOfConfig":"22"},{"size":1269,"mtime":1609252012687,"results":"36","hashOfConfig":"22"},{"size":775,"mtime":1609257920162,"results":"37","hashOfConfig":"22"},{"size":1806,"mtime":1609340909811,"results":"38","hashOfConfig":"22"},{"size":205,"mtime":1609527839609,"results":"39","hashOfConfig":"22"},{"size":719,"mtime":1609341961908,"results":"40","hashOfConfig":"22"},{"size":728,"mtime":1609343993732,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"xktkyx",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\index.js",[],["84","85"],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\reportWebVitals.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\App.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\reducers\\cartReducer.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\layout\\Nav.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\layout\\Main.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\pages\\Cart.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\pages\\Products.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\components\\ProductItem.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\actions\\cartActions.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\actions\\actionTypes.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\components\\CartItem.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\components\\ProductsFilter.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\components\\SingleProduct.js",["86"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { allActions } from '../actions/cartActions'\r\n\r\nimport { useForm } from '../hooks/useForm'\r\nimport { Validation } from '../Validation'\r\n\r\nimport { AiOutlineArrowLeft, AiOutlineArrowRight } from 'react-icons/ai'\r\n\r\nconst opinionInitialValues = {\r\n    username: '',\r\n    rating: '',\r\n    opinion: '',\r\n}\r\n\r\nconst SingleProduct = (props) => {\r\n    const {\r\n        handleChangeValues,\r\n        values,\r\n        handleSubmitForm,\r\n        formCorrect,\r\n        errors\r\n    } = useForm(opinionInitialValues, Validation)\r\n\r\n    const { username, rating, opinion } = values\r\n    const { usernameError, ratingError, opinionError } = errors\r\n\r\n    const products = useSelector(state => state.products)\r\n\r\n    const [routerState, setRouterState] = useState()\r\n\r\n    const [imageIndex, setImageIndex] = useState(0)\r\n\r\n    const [productIsInCart, setProductIsInCart] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    useEffect(() => {\r\n        setRouterState(props.match.params.id)\r\n    }, [props.match.params.id])\r\n\r\n    const getProduct = (id) => {\r\n        let tempProducts = [...products]\r\n        const product = tempProducts.find(item => item.id === id)\r\n\r\n        return product\r\n    }\r\n\r\n    const product = getProduct(parseInt(routerState))\r\n\r\n    useEffect(() => {\r\n        if (cart.find(item => item === product)) {\r\n            setProductIsInCart(true)\r\n        } else {\r\n            setProductIsInCart(false)\r\n        }\r\n    }, [product, cart])\r\n\r\n    const [commentAddedMessage, setCommentAddedMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (formCorrect) {\r\n            dispatch(allActions.addOpinion(values, product.id))\r\n            setCommentAddedMessage(\"Opinion Added!\")\r\n            setTimeout(() => setCommentAddedMessage(''), 3000)\r\n        }\r\n    }, [formCorrect])\r\n\r\n    const handleDeleteOpinion = (opinionID, productID) => {\r\n        dispatch(allActions.deleteOpinion(opinionID, productID))\r\n    }\r\n\r\n    if (!product) {\r\n        return (\r\n            <div>\r\n                <h1>nie znaleziono produktu</h1>\r\n            </div >\r\n        )\r\n    }\r\n\r\n    else {\r\n\r\n        const {\r\n            name,\r\n            description,\r\n            os,\r\n            ram,\r\n            memory,\r\n            price,\r\n            case_included,\r\n            free_shipping,\r\n            img\r\n        } = product\r\n\r\n        const handleSwitchImage = (button, index) => {\r\n\r\n            if (button === 'choose') {\r\n                setImageIndex(index)\r\n            }\r\n\r\n            if (button === 'prev') {\r\n                setImageIndex(prevState => prevState - 1)\r\n                if (imageIndex < 1) {\r\n                    setImageIndex(img.length - 1)\r\n                }\r\n            }\r\n            if (button === 'next') {\r\n                setImageIndex(prevState => prevState + 1)\r\n                if (imageIndex > 1) {\r\n                    setImageIndex(0)\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"single-product-cnt\">\r\n                    <div className=\"single-product\">\r\n                        <div className=\"single-product-img-cnt\">\r\n                            <div className=\"single-product-img\">\r\n                                <img src={img[imageIndex]} alt={name} />\r\n                            </div>\r\n                            <div className=\"single-product-img-btns\">\r\n                                <button\r\n                                    onClick={() => handleSwitchImage('prev')}\r\n                                    className=\"single-product-next-img\"><AiOutlineArrowLeft /></button>\r\n                                {img.map((item, index) => {\r\n                                    return (\r\n                                        <div key={index} className=\"single-product-btn\">\r\n                                            <img onClick={() => handleSwitchImage('choose', index)} src={item} alt=\"btn\"></img>\r\n                                        </div>\r\n                                    )\r\n\r\n                                })}\r\n                                <button\r\n                                    onClick={() => handleSwitchImage('next')}\r\n                                    className=\"single-product-next-img\"><AiOutlineArrowRight /></button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"single-product-description\">\r\n                            <h2 className=\"single-product-text-control\">{name}</h2>\r\n                            <p className=\"single-product-text-control\">{description}</p>\r\n                            <p className=\"single-product-text-control\"><strong>Operating system: </strong>{os}</p>\r\n                            <p className=\"single-product-text-control\"><strong>Device memory: </strong>{memory}</p>\r\n                            <p className=\"single-product-text-control\"><strong>RAM memory: </strong>{ram}</p>\r\n                            <p className=\"single-product-text-control\"><strong>case included: </strong>{case_included ? 'Case is included' : 'Case is not included'}</p>\r\n                            <p className=\"single-product-text-control\"><strong>free shipping: </strong>{free_shipping ? 'We provide free shipping for this product!' : 'We do not provide free shipping for this product'}</p>\r\n                            <p className=\"single-product-text-control\"><strong>Price: </strong>${price}</p>\r\n                            <a href=\"#opinions\">See reviews ({product.opinions.length})</a>\r\n                            <button\r\n                                disabled={productIsInCart ? true : false}\r\n                                onClick={() => dispatch(allActions.addToCart(product))}\r\n                                className={`single-product-add-cart ${productIsInCart && 'disabled'}`}\r\n                            >{`${productIsInCart ? 'Item in cart' : 'Add to cart'}`}</button>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"opinions\" className=\"product-opinion\">\r\n                        <div className=\"opinion-intro\">\r\n                            <h2>Add review</h2>\r\n                        </div>\r\n                        <form className=\"opinion-form\">\r\n                            <div className=\"opinion-form-control\">\r\n                                <label htmlFor=\"username\">Username: </label>\r\n                                <input\r\n                                    onChange={handleChangeValues}\r\n                                    value={username}\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    id=\"username\" />\r\n                                <small className=\"opinion-error-msg\">{usernameError ? usernameError : ''}</small>\r\n                            </div>\r\n                            <div className=\"opinion-form-control\">\r\n                                <label htmlFor=\"rating\">Rating: </label>\r\n                                <input\r\n                                    onChange={handleChangeValues}\r\n                                    value={rating}\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    max=\"5\"\r\n                                    name=\"rating\"\r\n                                    id=\"rating\" />\r\n                                <small className=\"opinion-error-msg\">{ratingError ? ratingError : ''}</small>\r\n                            </div>\r\n                            <div className=\"opinion-form-control\">\r\n                                <label htmlFor=\"opinion\">Opinion: </label>\r\n                                <textarea\r\n                                    onChange={handleChangeValues}\r\n                                    value={opinion}\r\n                                    name=\"opinion\"\r\n                                    id=\"opinion\" >\r\n                                </textarea>\r\n                                <small className=\"opinion-error-msg\">{opinionError ? opinionError : ''}</small>\r\n                            </div>\r\n                            <button onClick={handleSubmitForm} className=\"opinion-add-btn\">Submit</button>\r\n                        </form>\r\n                        <div className=\"opinions-cnt\">\r\n                            <h3>Comments: ({product.opinions.length})</h3>\r\n                            <p className=\"opinion-added-msg\">{commentAddedMessage}</p>\r\n                            {product.opinions.map((item, index) =>\r\n                            (\r\n                                <div key={index} className=\"opinion-item\">\r\n                                    <p><strong>Username: </strong>{item.username}</p>\r\n                                    <p><strong>Rating: </strong>{item.rating}</p>\r\n                                    <p><strong>Review: </strong>{item.opinion}</p>\r\n                                    <button className=\"opinion-delete-btn\" onClick={() => handleDeleteOpinion(item.id, product.id)}>Delete comment</button>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default SingleProduct\r\n","C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\hooks\\useForm.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\Validation.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\pages\\Home.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\components\\HomeTitle.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\components\\HomeCarouselItem.js",[],"C:\\Users\\admin\\Desktop\\htmlcssjs\\REACT\\redux-cart\\src\\layout\\Footer.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":70,"column":8,"nodeType":"93","endLine":70,"endColumn":21,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'product.id', and 'values'. Either include them or remove the dependency array.","ArrayExpression",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [dispatch, formCorrect, product.id, values]",{"range":"100","text":"101"},[1958,1971],"[dispatch, formCorrect, product.id, values]"]